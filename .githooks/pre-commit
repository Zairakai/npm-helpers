#!/bin/bash
# Git pre-commit hook for @zairakai/npm-vue-components
# Ensures code quality before commits

set -e

echo "üîç Running pre-commit checks for @zairakai/npm-vue-components..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå Error: Not in a Node.js project directory${NC}"
    exit 1
fi

# Function to run command and check result
run_check() {
    local cmd="$1"
    local description="$2"

    echo -e "${BLUE}üîÑ $description...${NC}"

    if eval "$cmd"; then
        echo -e "${GREEN}‚úÖ $description passed${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $description failed${NC}"
        return 1
    fi
}

# Function to check if staged files need formatting
check_staged_files() {
    # Get list of staged files
    STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(js|ts|vue|json|md|yml|yaml)$' || true)

    if [ -z "$STAGED_FILES" ]; then
        echo -e "${YELLOW}‚ÑπÔ∏è  No relevant files staged for commit${NC}"
        return 0
    fi

    echo -e "${BLUE}üìÑ Checking staged files: $STAGED_FILES${NC}"

    # Check if files are formatted
    echo "$STAGED_FILES" | xargs npx prettier --check || {
        echo -e "${YELLOW}‚ö†Ô∏è  Some files need formatting. Running prettier...${NC}"
        echo "$STAGED_FILES" | xargs npx prettier --write
        echo -e "${GREEN}‚ú® Files formatted. Please stage the changes and commit again.${NC}"
        exit 1
    }
}

# Install dependencies if node_modules is missing
if [ ! -d "node_modules" ]; then
    echo -e "${YELLOW}üì¶ Installing dependencies...${NC}"
    yarn install
fi

# 1. Check staged files formatting
check_staged_files

# 2. Run linting
run_check "yarn lint" "ESLint check"

# 3. Run type checking
run_check "yarn type-check" "TypeScript type checking"

# 4. Run tests
run_check "yarn test --run" "Unit tests"

# 5. Check formatting consistency
run_check "yarn check" "Formatting check" || {
    echo -e "${YELLOW}‚ö†Ô∏è  Formatting issues detected. Running format fix...${NC}"
    yarn format
    echo -e "${GREEN}‚ú® Formatting fixed. Please stage the changes and commit again.${NC}"
    exit 1
}

# 6. Build check
run_check "yarn build" "Build verification"

echo -e "${GREEN}üéâ All pre-commit checks passed! Ready to commit.${NC}"
