# GitHub Actions CI/CD Pipeline for @zairakai/helpers
# Automated testing, linting, and publishing workflow

name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '22'
  CACHE_KEY: helpers-v1

jobs:
  # Install dependencies
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ env.CACHE_KEY }}-

  # Code quality checks
  lint:
    name: ESLint Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('package-lock.json') }}

      - name: Run ESLint
        run: npm run lint

      - name: Upload ESLint results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: eslint-results
          path: reports/
          retention-days: 7

  # Code formatting check
  format:
    name: Code Format Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('package-lock.json') }}

      - name: Check code formatting
        run: npm run check

  # TypeScript type checking
  typecheck:
    name: TypeScript Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('package-lock.json') }}

      - name: Run TypeScript check
        run: npm run type-check || true
        continue-on-error: true

  # Run tests with coverage
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('package-lock.json') }}

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage/cobertura-coverage.xml
          flags: unittests
          name: @zairakai/helpers

  # Security audit
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: install
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('package-lock.json') }}

      - name: Run security audit
        run: npm audit --audit-level=moderate

  # Check for outdated packages
  outdated:
    name: Outdated Dependencies
    runs-on: ubuntu-latest
    needs: install
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('package-lock.json') }}

      - name: Check for outdated packages
        run: npm outdated || true

  # Build the package
  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [install, lint, format, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('package-lock.json') }}

      - name: Build package
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  # Documentation update check
  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'README.md') || contains(github.event.head_commit.modified, 'CHANGELOG.md') || contains(github.event.head_commit.modified, 'CONTRIBUTING.md')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Documentation updated
        run: echo "Documentation updated for @zairakai/helpers"

  # Publish to npm (on tag or manual trigger)
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('package-lock.json') }}

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist/

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Publish to GitHub Packages (as backup)
  publish-github:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'workflow_dispatch'
    environment: github-registry
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@zairakai'

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('package-lock.json') }}

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist/

      - name: Configure GitHub Package Registry
        run: |
          echo "@zairakai:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}